{"ast":null,"code":"var _jsxFileName = \"/home/ismayil/ismayildemo/special-octo-guacamole/src/Components/BurgerRestaurant.js\";\nimport React, { Component } from 'react';\nimport BurgerCard from './BurgerCard'; // import Cards from './Cards'\n// import {burgerData} from \"./burger\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class BurgerRestaurant extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      burgerDataa: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://randomuser.me/api?results=5\").then(res => res.json()).then(result => {\n      this.setState({\n        burgerDataa: result.results\n      }); // console.log(result.results.email)\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    //   var myArr = [\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\"];\n    // const [navbarOpen, setNavbarOpen] = React.useState(false);\n    const {\n      burgerDataa\n    } = this.state;\n    console.log(\"im called from render\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-purple-700\",\n        children: \"top other sections -check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-purple-700 text-center text-6xl font-bold pb-3\",\n        children: \"OUR OFFERS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap justify-center mx-20 my-0\",\n        children: burgerDataa.map(item => {\n          return /*#__PURE__*/_jsxDEV(BurgerCard, {\n            cardDetails: item,\n            children: \" \"\n          }, item.id.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 1\n    }, this);\n  }\n\n} //moving to aws server- deployment-should work on this - dynamically update the changes based on the server","map":{"version":3,"sources":["/home/ismayil/ismayildemo/special-octo-guacamole/src/Components/BurgerRestaurant.js"],"names":["React","Component","BurgerCard","BurgerRestaurant","constructor","props","state","error","isLoaded","burgerDataa","componentDidMount","fetch","then","res","json","result","setState","results","render","console","log","map","item","id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CACA;AACA;;;AACA,eAAe,MAAMC,gBAAN,SAA+BF,SAA/B,CAAyC;AACpDG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,WAAW,EAAE;AAHJ,KAAb;AAKH;;AACDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,qCAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACV,WAAKC,QAAL,CAAc;AACZP,QAAAA,WAAW,EAAEM,MAAM,CAACE;AADR,OAAd,EADU,CAKV;AACD,KATL,EAUI;AACA;AACA;AACCV,IAAAA,KAAD,IAAW;AACT,WAAKS,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAlBL;AAoBD;;AACPW,EAAAA,MAAM,GAAG;AACL;AACI;AACA,UAAM;AAAGT,MAAAA;AAAH,QAAmB,KAAKH,KAA9B;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AAEL,wBAEH;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI;AAAK,QAAA,SAAS,EAAC,mDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAWI;AAAK,QAAA,SAAS,EAAC,0CAAf;AAAA,kBAIIX,WAAW,CAACY,GAAZ,CAAgBC,IAAI,IAAI;AACzB,8BAAO,QAAC,UAAD;AAAY,YAAA,WAAW,EAAKA,IAA5B;AAAA;AAAA,aAA0CA,IAAI,CAACC,EAAL,CAAQC,IAAlD;AAAA;AAAA;AAAA;AAAA,kBAAP;AACE,SAFD;AAJJ;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFG;AA+BE;;AApEmD,C,CAsExD","sourcesContent":["import React, { Component } from 'react'\nimport BurgerCard from './BurgerCard'\n// import Cards from './Cards'\n// import {burgerData} from \"./burger\"\nexport default class BurgerRestaurant extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            burgerDataa: []\n          };\n    }\n    componentDidMount() {\n        fetch(\"https://randomuser.me/api?results=5\")\n          .then(res => res.json())\n          .then(\n            (result) => {\n              this.setState({\n                burgerDataa: result.results\n                \n              });\n              // console.log(result.results.email)\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n              this.setState({\n                isLoaded: true,\n                error\n              });\n            }\n          )\n      }\nrender() {\n    //   var myArr = [\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\"];\n        // const [navbarOpen, setNavbarOpen] = React.useState(false);\n        const {  burgerDataa } = this.state;\n        console.log(\"im called from render\")\n       \n   return (\n\n<div className=\"bg-gray\">\n    <div className=\"\">\n     \n    </div>\n    <div className=\"bg-purple-700\">\n        top other sections -check\n    </div>\n    <div className=\"bg-purple-700 text-center text-6xl font-bold pb-3\">\n       OUR OFFERS\n    </div>\n\n    <div className=\"flex flex-wrap justify-center mx-20 my-0\">\n\n\n\n       {burgerDataa.map(item => {\n       return <BurgerCard cardDetails = { item } key = {item.id.name}> </BurgerCard>\n        })\n            }\n     \n      \n\n\n    </div>\n   \n    \n</div>\n \n        );\n    }\n}\n//moving to aws server- deployment-should work on this - dynamically update the changes based on the server\n"]},"metadata":{},"sourceType":"module"}