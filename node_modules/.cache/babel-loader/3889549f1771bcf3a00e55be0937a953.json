{"ast":null,"code":"var _jsxFileName = \"/home/ismayil/ismayildemo/special-octo-guacamole/src/Components/BurgerRestaurant.js\";\nimport React, { Component } from 'react';\nimport BurgerCard from './BurgerCard'; // import Cards from './Cards'\n// import {burgerData} from \"./burger\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class BurgerRestaurant extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://randomuser.me/api?results=5\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result.results\n      }); // console.log(result.results.email)\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 18\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 18\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-purple-700\",\n          children: \"top other sections -check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-purple-700 text-center text-6xl font-bold pb-3\",\n          children: \"OUR OFFERS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap justify-center mx-20 my-0\",\n          children: items.map(item => {\n            return /*#__PURE__*/_jsxDEV(BurgerCard, {\n              profile: item,\n              children: \" \"\n            }, item.id.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 23\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n} //moving to aws server- deployment-should work on this - dynamically update the changes based on the server","map":{"version":3,"sources":["/home/ismayil/ismayildemo/special-octo-guacamole/src/Components/BurgerRestaurant.js"],"names":["React","Component","BurgerCard","BurgerRestaurant","constructor","props","state","error","isLoaded","items","componentDidMount","fetch","then","res","json","result","setState","results","render","message","map","item","id","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CACA;AACA;;;AACA,eAAe,MAAMC,gBAAN,SAA+BF,SAA/B,CAAyC;AACpDG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKH;;AACDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,qCAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACV,WAAKC,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,KAAK,EAAEM,MAAM,CAACE;AAFF,OAAd,EADU,CAMV;AACD,KAVL,EAWI;AACA;AACA;AACCV,IAAAA,KAAD,IAAW;AACT,WAAKS,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAnBL;AAqBD;;AACDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA6B,KAAKH,KAAxC;;AACA,QAAIC,KAAJ,EAAW;AACT,0BAAO;AAAA,8BAAaA,KAAK,CAACY,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO,IAAI,CAACX,QAAL,EAAe;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,MAED;AACJ,0BACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACA;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBADA,eAGA;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA,eAMA;AAAK,UAAA,SAAS,EAAC,mDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANA,eASA;AAAK,UAAA,SAAS,EAAC,0CAAf;AAAA,oBACIC,KAAK,CAACW,GAAN,CAAUC,IAAI,IAAI;AACnB,gCAAO,QAAC,UAAD;AAAgC,cAAA,OAAO,EAAEA,IAAzC;AAAA;AAAA,eAAiBA,IAAI,CAACC,EAAL,CAAQC,KAAzB;AAAA;AAAA;AAAA;AAAA,oBAAP;AACE,WAFD;AADJ;AAAA;AAAA;AAAA;AAAA,gBATA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAqBD;AAEF;;AA9DiD,C,CAgExD","sourcesContent":["import React, { Component } from 'react'\nimport BurgerCard from './BurgerCard'\n// import Cards from './Cards'\n// import {burgerData} from \"./burger\"\nexport default class BurgerRestaurant extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            items: []\n          };\n    }\n    componentDidMount() {\n        fetch(\"https://randomuser.me/api?results=5\")\n          .then(res => res.json())\n          .then(\n            (result) => {\n              this.setState({\n                isLoaded: true,\n                items: result.results\n                \n              });\n              // console.log(result.results.email)\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n              this.setState({\n                isLoaded: true,\n                error\n              });\n            }\n          )\n      }\n      render() {\n        const { error, isLoaded, items } = this.state;\n        if (error) {\n          return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n          return <div>Loading...</div>;\n        }else {\n          return (\n            <div className=\"bg-gray\">\n            <div className=\"\">\n            </div>\n            <div className=\"bg-purple-700\">\n                top other sections -check\n            </div>\n            <div className=\"bg-purple-700 text-center text-6xl font-bold pb-3\">\n               OUR OFFERS\n            </div>\n            <div className=\"flex flex-wrap justify-center mx-20 my-0\">\n               {items.map(item => {\n               return <BurgerCard key={item.id.value} profile={item}> </BurgerCard>\n                })\n                    }\n            </div>\n            </div>\n    \n    \n           \n          );\n        }\n    \n      }\n}\n//moving to aws server- deployment-should work on this - dynamically update the changes based on the server\n"]},"metadata":{},"sourceType":"module"}